package lab1;

import dataStructures.ArrayLinearList;

public class MyArrayLinearList extends ArrayLinearList{
	private int[] data;   // regular array
    private int size;     // current number of elements
    private int capacity; // maximum size

    public MyArrayLinearList(int capacity) {
        this.capacity = capacity;
        data = new int[capacity];
        size = 0;
    }

    // Add element at the end
    public void add(int element) {
        if (size == capacity) {
            System.out.println("List is full. Cannot add " + element);
            return;
        }
        data[size++] = element;
    }

    // Insert element at specific index
    public void insert(int index, int element) {
        if (size == capacity) {
            System.out.println("List is full. Cannot insert " + element);
            return;
        }
        if (index < 0 || index > size) {
            System.out.println("Invalid index.");
            return;
        }
        // Shift elements to the right
        for (int i = size; i > index; i--) {
            data[i] = data[i - 1];
        }
        data[index] = element;
        size++;
    }

    // Get element at index
    public int get(int index) {
        if (index < 0 || index >= size) {
            throw new IndexOutOfBoundsException("Invalid index.");
        }
        return data[index];
    }

    // Remove element at index
    public void remove(int index) {
        if (index < 0 || index >= size) {
            System.out.println("Invalid index.");
            return;
        }
        // Shift elements left
        for (int i = index; i < size - 1; i++) {
            data[i] = data[i + 1];
        }
        size--;
    }

    // Current size
    public int size() {
        return size;
    }

    // Print list
    public void display() {
        System.out.print("List: ");
        for (int i = 0; i < size; i++) {
            System.out.print(data[i] + " ");
        }
        System.out.println();
    }
    //Lab functions
    public int max() {
        int max = data[0];
        for (int i = 1; i < size; i++) {
            if (data[i] > max) {
                max = data[i];
            }
        }
        return max;
    }

    public int min() {
        int min = data[0];
        for (int i = 1; i < size; i++) {
            if (data[i] < min) {
                min = data[i];
            }
        }
        return min;
    }

    public int sum() {
    	int sum = 0;
    	for(int i=0;i<size;i++) {
    		sum+=this.get(i);
    	}
    	return sum;
    }
    public double average() {
    	return (double) sum()/size;
    }
    public void removeOdd() {
        for (int i=size-1;i>=0;i--) {
            if (data[i] % 2 != 0) {
                remove(i);
            }
        }
    }

    public void sort() {
          boolean swapped;

          for (int i = 0; i < size; i++) {
              swapped = false;

              for (int j = 0; j < size - i - 1; j++) {
                  if (data[j] > data[j + 1]) {
                      int temp = data[j];
                      data[j] = data[j + 1];
                      data[j + 1] = temp;

                      swapped = true;
                  }
              }
              if (!swapped) break;
          }
    }
}
